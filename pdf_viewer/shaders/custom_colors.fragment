#version 330 core

out vec4 color;
in vec2 screen_pos;
in vec2 uvs;
uniform sampler2D pdf_texture;
uniform mat4 transform_matrix;
uniform float transparency;
uniform float bg_threshold_low;   // Background detection threshold (low)
uniform float bg_threshold_high;  // Background detection threshold (high)

// Luminance coefficients (Rec. 601 standard)
const vec3 luminance_coeffs = vec3(0.299, 0.587, 0.114);

void main(){
    // Get original PDF color (before transformation)
    vec3 original_rgb = texture(pdf_texture, uvs).rgb;

    // Detect text vs background on ORIGINAL PDF colors
    // In original PDF: text is dark, background is light
    float original_luminance = dot(original_rgb, luminance_coeffs);
    float backgroundFactor = smoothstep(bg_threshold_low, bg_threshold_high, original_luminance);
    
    // Apply transformation to get final colors
    vec4 pdf_color = vec4(original_rgb, 1);
    vec3 resulting_unclamped_color = (transform_matrix * pdf_color).rgb;
    vec3 resulting_color = clamp(resulting_unclamped_color, 0, 1);
    
    // Text (dark in original) = FULL opacity
    // Background (light in original) = transparency
    float alpha = mix(1.0, transparency, backgroundFactor);
    
    color = vec4(resulting_color, alpha);
}
